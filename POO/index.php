<?php

function show($message)
{
    echo "<p>$message</p>";
}

abstract class Unit {
    protected $hp = 40;
    protected $name;

    public function __construct( $name, Armor $armor = null)
    {
        $this->armor = new Armor;
        $this->name = $name;
    }

    public function getName():string
    {
        return $this->name;
    }

    public function getHp():int
    {
        return $this->hp;
    }

    public function move($direction):void
    {
        show( "{$this->name} camina hacia $direction");
    }

    public function attack(Unit $opponent)
    {
        show( "{$this->name} lanza un golpe $opponent");
    }

    public function takeDamage($damage)
    {
        $this->setHp($this->hp - $damage);

        if ($this->hp <= 0)
        {
            $this->die();
        }
    }

    public function die()
    {
        show( "{$this->name} muere");
    }

    private function setHp($points)
    {
        $this->hp = $points;

        show("{$this->name} ahora tiene {$this->hp} puntos de vida");
    }


}

class Soldier extends Unit {

    protected $damage = 40;

    public function attack(Unit $opponent)
    {
        show( "{$this->name} ataca con la espada a {$opponent->getName()} ");

        $opponent->takeDamage($this->damage);
    }

    public function takeDamage($damage)
    {
        parent::takeDamage($damage / 2); // TODO: Change the autogenerated stub
    }


}

class Archer extends Unit {

    protected $damage = 20;

    public function attack(Unit $opponent)
    {
        show( "{$this->name} dispara una flecha a {$opponent->getName()} ");

        $opponent->takeDamage($this->damage);

    }

    public function takeDamage($damage)
    {
        if (rand(0,1))
        {
            return parent::takeDamage($damage); // TODO: Change the autogenerated stub
        }
    }
}

class Armor
{

    public function absorbDamage($damage)
    {
        return $damage /2;
    }

}









$ramm = new Soldier('Ramm');

$silence = new Archer('Silence');
//$silence->move('el norte');
$silence->attack($ramm);
$silence->attack($ramm);

$ramm->attack($silence);